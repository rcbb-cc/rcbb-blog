(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{368:function(e,t,_){"use strict";_.r(t);var v=_(1),o=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"spring-security"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-security"}},[e._v("#")]),e._v(" Spring Security")]),e._v(" "),t("p",[t("code",[e._v("Spring Security")]),e._v("是一个功能强大且高度可定制的身份验证和访问控制框架。")]),e._v(" "),t("p",[e._v("它是保护基于"),t("code",[e._v("Spring")]),e._v("的应用程序的官方标准。毕竟是全家桶套餐中的一员。"),t("code",[e._v("Spring Security")]),e._v("是一个专注于为"),t("code",[e._v("Java")]),e._v("应用程序提供身份验证和授权的框架。 像所有"),t("code",[e._v("Spring")]),e._v("项目一样，"),t("code",[e._v("Spring Security")]),e._v("的真正强大之处在于它可以轻松扩展以满足自定义需求。")]),e._v(" "),t("h2",{attrs:{id:"核心功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心功能"}},[e._v("#")]),e._v(" 核心功能")]),e._v(" "),t("ol",[t("li",[e._v("认证（你是谁）")]),e._v(" "),t("li",[e._v("授权（你能干啥）")]),e._v(" "),t("li",[e._v("攻击防护（防止伪造身份）")])]),e._v(" "),t("h2",{attrs:{id:"基本原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本原理"}},[e._v("#")]),e._v(" 基本原理")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/09/20220929224057-ea3e75.png?x-oss-process=style/yuantu_shuiyin",alt:"Spring Security基本原理图"}})]),e._v(" "),t("p",[e._v("上面是"),t("code",[e._v("Spring Security")]),e._v("的基本原理图，最右边就是我们的"),t("code",[e._v("Controller")]),e._v("接口，前面的所有都是过滤器。")]),e._v(" "),t("p",[e._v("简单理解："),t("code",[e._v("Spring Security")]),e._v("就是一组过滤器，它的核心也就是这样的一条过滤链，访问的所有请求都会经过 Spring Security 的过滤器。")]),e._v(" "),t("p",[e._v("过滤器链上有很多的过滤器，它们的作用就是用来校验用户的身份，每一个过滤器负责处理一种认证方式。")]),e._v(" "),t("p",[e._v("比如："),t("code",[e._v("http.formLogin()")]),e._v("对应着"),t("code",[e._v("UsernamePasswordAuthenticationFilter")]),e._v("过滤器。"),t("br"),e._v("\n比如："),t("code",[e._v("http.httpBasic()")]),e._v("对应着"),t("code",[e._v("BasicAuthenticationFilter")]),e._v("过滤器。")]),e._v(" "),t("p",[e._v("请求到达过滤器时，如"),t("code",[e._v("UsernamePasswordAuthenticationFilter")]),e._v("这个过滤器时，就会触发当前请求是否是一个登陆请求，判断请求中是否携带用户名和密码等。如果符合条件，那么过滤器就会试图去登陆，若是不满足条件，就会下发给下一个过滤器。")]),e._v(" "),t("p",[e._v("例如"),t("code",[e._v("UsernamePasswordAuthenticationFilter")]),e._v("下一个过滤器是"),t("code",[e._v("BasicAuthenticationFilter")]),e._v("。到达"),t("code",[e._v("BasicAuthenticationFilter")]),e._v("后又会判断是否触发当前过滤器的条件，如请求头中是否携带"),t("code",[e._v("Basic")]),e._v(" 登陆的信息，如果有就会尝试解码和登陆。")]),e._v(" "),t("p",[e._v("其他自定义过滤器也是同样的逻辑，按照这个流程一个个的往下走。")]),e._v(" "),t("p",[e._v("如果在某个过滤器上认证成功后会在请求上做一个标记，用来表示当前这个请求的用户授权成功了。")]),e._v(" "),t("p",[t("strong",[e._v("ExceptionTranslationFilter")])]),e._v(" "),t("p",[t("code",[e._v("ExceptionTranslationFilter")]),e._v("异常转换过滤器位于整个过滤链的后方，用来转换整个链路中出现的异常，将其转化，顾名思义，转化以意味本身并不处理。")]),e._v(" "),t("p",[e._v("一般其只处理两大类异常：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("AccessDeniedException")]),e._v("访问异常；")]),e._v(" "),t("li",[t("code",[e._v("AuthenticationException")]),e._v("认证异常；")])]),e._v(" "),t("p",[e._v("这个过滤器非常重要，因为它将"),t("code",[e._v("Java")]),e._v("中的异常和"),t("code",[e._v("HTTP")]),e._v(" 的响应连接在了一起，这样在处理异常时，我们不用考虑密码错误该跳到什么页面，账号锁定该如何，只需要关注自己的业务逻辑，抛出相应的异常便可。")]),e._v(" "),t("p",[e._v("如果该过滤器检测到"),t("code",[e._v("AuthenticationException")]),e._v("，则将会交给内部的"),t("code",[e._v("AuthenticationEntryPoint")]),e._v("去处理，如果检测到"),t("code",[e._v("AccessDeniedException")]),e._v("，需要先判断当前用户是不是匿名用户，如果是匿名访问，则和前面一样运行"),t("code",[e._v("AuthenticationEntryPoint")]),e._v("，否则会委托给"),t("code",[e._v("AccessDeniedHandler")]),e._v("去处理，而"),t("code",[e._v("AccessDeniedHandler")]),e._v("的默认实现，是"),t("code",[e._v("AccessDeniedHandlerImpl")]),e._v("。")]),e._v(" "),t("p",[e._v("所以"),t("code",[e._v("ExceptionTranslationFilter")]),e._v("内部的"),t("code",[e._v("AuthenticationEntryPoint")]),e._v("是至关重要的，顾名思义：认证的入口点。")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/m0_51945027/article/details/119608340",target:"_blank",rel:"noopener noreferrer"}},[e._v("已注销-ExceptionTranslationFilter详解"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("strong",[e._v("FilterSecurityInterceptor")])]),e._v(" "),t("p",[e._v("走过前面所有的过滤器后最后会来到"),t("code",[e._v("FilterSecurityInterceptor")]),e._v("，这个过滤器是整个 Spring Security 过滤器链上的最后一环，它能够决定请求能不能访问 API 请求。")]),e._v(" "),t("p",[t("code",[e._v("FilterSecurityInterceptor")]),e._v("从"),t("code",[e._v("SecurityContextHolder")]),e._v("中获取"),t("code",[e._v("Authentication")]),e._v("对象，然后比对用户拥有的权限和资源所需的权限。前者可以通过"),t("code",[e._v("Authentication")]),e._v("对象直接获得，而后者则需要引入我们之前一直未提到过的两个类："),t("code",[e._v("SecurityMetadataSource")]),e._v("、"),t("code",[e._v("AccessDecisionManager")]),e._v("。")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/m0_51945027/article/details/119608452",target:"_blank",rel:"noopener noreferrer"}},[e._v("已注销-FilterSecurityInterceptor详解"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://blog.csdn.net/liuminglei1987/article/details/107662200",target:"_blank",rel:"noopener noreferrer"}},[e._v("银河架构师-FilterSecurityInterceptor详解"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"表单认证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表单认证"}},[e._v("#")]),e._v(" 表单认证")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/CSDN877425287/article/details/108945315",target:"_blank",rel:"noopener noreferrer"}},[e._v("程序员劝退师-TAO-SpringSecurity表单认证"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[e._v("#")]),e._v(" 源码分析")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/09/20220929233446-9cf902.png?x-oss-process=style/yuantu_shuiyin",alt:"Spring Security认证流程"}})]),e._v(" "),t("p",[t("code",[e._v("AuthenticationManager")]),e._v("自己并不包含验证的逻辑，它的作用是用来管理"),t("code",[e._v("AuthenticationProvider")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("getProviders()")]),e._v("会拿到整个系统中所有实现"),t("code",[e._v("AuthenticationProvider")]),e._v("的实现类，这里上面提到的"),t("code",[e._v("AuthenticationManager")]),e._v("就是来收集并管理所有"),t("code",[e._v("AuthenticationProvider")]),e._v("的实现类，这里就会循环挨个去比对上面"),t("code",[e._v("AuthenticationToken")]),e._v("类型。")]),e._v(" "),t("p",[e._v("不同的"),t("code",[e._v("Provider")]),e._v("支持的"),t("code",[e._v("Authentication")]),e._v("类型是不一样的，根据传入的"),t("code",[e._v("Authentication")]),e._v("类型这里会挑出一个进行校验处理。")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/CSDN877425287/article/details/109039478",target:"_blank",rel:"noopener noreferrer"}},[e._v("程序员劝退师-TAO-SpringSecurity表单登录流程源码分析"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"认证的结果如何在请求间共享"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#认证的结果如何在请求间共享"}},[e._v("#")]),e._v(" 认证的结果如何在请求间共享")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/09/20220929234347-1a450d.png?x-oss-process=style/yuantu_shuiyin",alt:"认证结果共享"}})]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/CSDN877425287/article/details/109039545",target:"_blank",rel:"noopener noreferrer"}},[e._v("程序员劝退师-TAO-SpringSecurity认证的结果在请求间共享"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"授权流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#授权流程"}},[e._v("#")]),e._v(" 授权流程")]),e._v(" "),t("p",[t("code",[e._v("Spring Security")]),e._v("真正判断请求能否通过是在"),t("code",[e._v("FilterSecurityInterceptor")]),e._v("过滤器中处理的，如果请求不能通过的话就会根据不同的原因抛出异常，抛出异常以后就会由"),t("code",[e._v("ExceptionTranslationFilter")]),e._v("这个过滤器接收处理。")]),e._v(" "),t("p",[e._v("但有一个特殊的过滤器"),t("code",[e._v("AnonymousAuthenticationFilter")])]),e._v(" "),t("p",[t("strong",[e._v("AnonymousAuthenticationFilter")])]),e._v(" "),t("p",[t("code",[e._v("AnonymousAuthenticationFilter")]),e._v("中的逻辑比较简单，就是判断当前的"),t("code",[e._v("SecurityContextHolder")]),e._v("中是否有"),t("code",[e._v("authentication")]),e._v("，是否等于"),t("code",[e._v("null")]),e._v("。")]),e._v(" "),t("p",[e._v("这里的判断实际上就在在判断前面的过滤器是否完成身份的认证，或者在"),t("code",[e._v("Session")]),e._v("中拿到身份的证信息。")]),e._v(" "),t("p",[e._v("如果前面的过滤器一个都没认证的话，那么就会创建一个"),t("code",[e._v("authentication")]),e._v("然后"),t("code",[e._v("set")]),e._v("到"),t("code",[e._v("SecurityContextHolder")]),e._v("中，这里放的并不是认证成功后的用户信息，而是一个字符串"),t("code",[e._v("anonymousUser")]),e._v("。")]),e._v(" "),t("p",[e._v("在"),t("code",[e._v("Spring Security")]),e._v("中，"),t("code",[e._v("AnonymousAuthenticationFilter")]),e._v("是所有认证过滤器的最后一个，也就是不管你前面有没有身份认证成功，"),t("code",[e._v("SecurityContextHolder")]),e._v("中一定是会放一个"),t("code",[e._v("authentication")]),e._v("的。如果前面的过滤器认证成功了，那么放的就是用户身份信息，如果一个都没成功，那么就是一个字符串"),t("code",[e._v("anonymousUser")]),e._v("。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/09/20220930104238-24d896.png?x-oss-process=style/yuantu_shuiyin",alt:"授权流程"}})]),e._v(" "),t("p",[e._v("核心："),t("code",[e._v("FilterSecurityInterceptor")]),e._v("、"),t("code",[e._v("AccessDecisionManager")]),e._v("、"),t("code",[e._v("AccessDecisionVoter")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("FilterSecurityInterceptor")]),e._v("：它是授权的主入口。")]),e._v(" "),t("p",[t("code",[e._v("AccessDecisionManager")]),e._v("：访问决定的管理者，是一个接口，它有一个抽象实现"),t("code",[e._v("AbstractAccessDecisionManager")]),e._v("和三个具体实现"),t("code",[e._v("AffirmativeBased")]),e._v("、"),t("code",[e._v("ConsensusBased")]),e._v("、"),t("code",[e._v("UnanimousBase")]),e._v("。它也管理者一组"),t("code",[e._v("AccessDecisionVoter")]),e._v("。")]),e._v(" "),t("p",[t("code",[e._v("AccessDecisionVoter")]),e._v("：从名字就能看出它是做投票的。")]),e._v(" "),t("p",[e._v("当"),t("code",[e._v("AccessDecisionManager")]),e._v("收到一个请求时这一组"),t("code",[e._v("AccessDecisionVoter")]),e._v("会根据自己的逻辑判断这个请求时过还是不过。"),t("br"),e._v("\n判断有三套逻辑：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("AffirmativeBased")]),e._v("：不管有多少个"),t("code",[e._v("AccessDecisionVoter")]),e._v("投不过，只要有一个投通过，那么请求就可以访问。（Spring Security的默认实现逻辑）")]),e._v(" "),t("li",[t("code",[e._v("UnanimousBased")]),e._v("：不管有多少个"),t("code",[e._v("AccessDecisionVoter")]),e._v("投通过，只要有一个投不通过，那么请求就不可以访问。")]),e._v(" "),t("li",[t("code",[e._v("ConsensusBased")]),e._v("：判断通过的"),t("code",[e._v("AccessDecisionVoter")]),e._v("多还是不通过的多，哪个多就是哪个。")])]),e._v(" "),t("p",[e._v("在判断一个请求能不能过需要两块数据："),t("code",[e._v("ConfigAttribute")]),e._v("、"),t("code",[e._v("Authentication")]),e._v("。")]),e._v(" "),t("p",[t("strong",[t("code",[e._v("ConfigAttribute")])])]),e._v(" "),t("p",[e._v("请求的权限信息"),t("code",[e._v("ConfigAttribute")]),e._v("。例：a请求需要什么权限，b请求需要什么权限。")]),e._v(" "),t("p",[e._v("请求到达"),t("code",[e._v("FilterSecurityInterceptor")]),e._v("时就会把这个请求路径所需的权限读出来，封装成一组"),t("code",[e._v("ConfigAttribute")]),e._v("对象。")]),e._v(" "),t("p",[t("strong",[t("code",[e._v("Authentication")])])]),e._v(" "),t("p",[t("code",[e._v("Authentication")]),e._v("实际上就是当前请求的用户的权限信息，也就是当前用户有哪些权限，这个信息就是封装在"),t("code",[e._v("Authentication")]),e._v("里。")])])}),[],!1,null,null,null);t.default=o.exports}}]);