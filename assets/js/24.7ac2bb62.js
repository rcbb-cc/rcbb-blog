(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{365:function(s,a,n){"use strict";n.r(a);var e=n(1),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"springboot使用hibernate-validator-后端参数校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot使用hibernate-validator-后端参数校验"}},[s._v("#")]),s._v(" SpringBoot使用Hibernate Validator（后端参数校验）")]),s._v(" "),a("ol",[a("li",[s._v("表单提交，前端做的了参数校验，服务器端还需要做参数校验吗？"),a("br")]),s._v(" "),a("li",[s._v("服务器端怎么做参数校验？怎么样做参数校验最快捷？"),a("br")]),s._v(" "),a("li",[s._v("JSR-303 是什么？如何使用？SpringBoot下如何使用？"),a("br")]),s._v(" "),a("li",[s._v("使用一个实体接收提交内容时，新增和更新操作的参数校验标准不同时如何解决？"),a("br")]),s._v(" "),a("li",[s._v("如何自定义校验？"),a("br")])]),s._v(" "),a("p",[s._v("SpringBoot 使用 JSR303 实现参数验证。"),a("br"),s._v("\nSpringBoot 使用 Hibernate Validator 校验。"),a("br"),s._v("\n示例代码，下文所有源代码都在这个仓库。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/rcbb-cc/fast-start-guide",target:"_blank",rel:"noopener noreferrer"}},[s._v("Validator-demo Github地址"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"jsr-303"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsr-303"}},[s._v("#")]),s._v(" JSR-303")]),s._v(" "),a("p",[s._v("看 JSR-303，首先我们得看看 JSR 是什么含义。"),a("br"),s._v("\n是指向 JCP(Java Community Process) 提出新增一个标准化技术规范的正式请求。任何人都可以提交JSR，以向Java平台增添新的API和服务。JSR已成为Java界的一个重要标准。\nJSR，Java Specification Requests 的缩写，意思是 Java 规范提案。"),a("br"),s._v(" "),a("strong",[s._v("JSR-303 是JAVA EE 6 中的一项子规范")]),s._v("，叫做 Bean Validation。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2020/11/JSR303-%E8%A7%84%E8%8C%83_1605698683634.png?x-oss-process=style/yuantu_shuiyin",alt:"JSR303-规范"}})]),s._v(" "),a("p",[s._v("Hibernate Validator 是 Bean Validation 的参考实现，Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。"),a("br"),s._v(" "),a("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2020/11/HibernateValidator%E9%99%84%E5%8A%A0%E7%9A%84_1605698765125.png?x-oss-process=style/yuantu_shuiyin",alt:"HibernateValidator附加的"}})]),s._v(" "),a("h2",{attrs:{id:"springboot使用jsr-303"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot使用jsr-303"}},[s._v("#")]),s._v(" SpringBoot使用JSR-303")]),s._v(" "),a("p",[s._v("SpringBoot 使用 JSR303 实现参数验证。"),a("br"),s._v("\nSpringBoot 使用 Hibernate Validator 实现参数验证。")]),s._v(" "),a("h2",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[s._v("#")]),s._v(" 基本使用")]),s._v(" "),a("ol",[a("li",[s._v("在接收参数的 DTO 上加上相关验证条件；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@Data\npublic class TestDTO1 {\n    @NotNull\n    private Long id;\n    @NotBlank\n    private String name;\n    @NotNull\n    private Integer age;\n    @NotNull\n    private Integer status;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("开启校验功能 @Valid；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@PostMapping("/test1")\npublic R test1(@Valid @RequestBody TestDTO1 dto) {\n    log.info("[TestDTO1 <{}>]", dto);\n    return R.ok();\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("给校验的 bean 后紧跟一个 BindingResult，就可以获取到校验的结果；")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@PostMapping("/test2")\npublic R test2(@Valid @RequestBody TestDTO1 dto, BindingResult result) {\n    log.info("[TestDTO1 <{}>]", dto);\n    log.error("[BindingResult <{}>]", result);\n    if (result != null && result.getErrorCount() > 0) {\n        return R.failed(result.getAllErrors());\n    }\n    return R.ok();\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"全局异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局异常处理"}},[s._v("#")]),s._v(" 全局异常处理")]),s._v(" "),a("p",[s._v("加上全局异常处理")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Slf4j\n@RestControllerAdvice\npublic class GlobalBizExceptionHandler {\n\n    /**\n     * 全局异常.\n     * @param e the e\n     * @return R\n     */\n    @ExceptionHandler(Exception.class)\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    public R handleGlobalException(Exception e) {\n        log.error("全局异常信息 ex={}", e.getMessage(), e);\n        return R.failed(e.getLocalizedMessage());\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("使用 @RequestBody 来接收参数时，当传入的参数不符合要求时，抛出的异常为 org.springframework.web.bind.MethodArgumentNotValidException，所以我们对这个异常进行处理。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * validation Exception\n * @param exception\n * @return R\n */\n@ExceptionHandler({ MethodArgumentNotValidException.class })\n@ResponseStatus(HttpStatus.BAD_REQUEST)\npublic R handleBodyValidException(MethodArgumentNotValidException exception) {\n    List<FieldError> fieldErrors = exception.getBindingResult().getFieldErrors();\n    log.warn("[参数绑定异常,ex = {}]", fieldErrors.get(0).getDefaultMessage());\n    return R.failed(fieldErrors.get(0).getDefaultMessage());\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("使用以 form-data 形式传参时，当传入的参数不符合要求时，抛出的异常为 org.springframework.validation.BindException，所以我们对这个异常进行处理。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * validation Exception (以form-data形式传参)\n * @param exception\n * @return R\n */\n@ExceptionHandler({ BindException.class })\n@ResponseStatus(HttpStatus.BAD_REQUEST)\npublic R bindExceptionHandler(BindException exception) {\n    List<FieldError> fieldErrors = exception.getBindingResult().getFieldErrors();\n    log.warn("[参数绑定异常,ex = {}]", fieldErrors.get(0).getDefaultMessage());\n    return R.failed(fieldErrors.get(0).getDefaultMessage());\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("加上全局异常捕获后，参数若有不符合，请求的结果如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n    "code": 1,\n    "msg": "id必须为空",\n    "data": null\n}\n{\n    "code": 1,\n    "msg": "age不能为空",\n    "data": null\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"分组校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组校验"}},[s._v("#")]),s._v(" 分组校验")]),s._v(" "),a("p",[s._v("使用一个实体接收提交内容时，新增和更新操作的参数校验标准不同时如何解决？"),a("br"),s._v("\n例：新增操作不需要传入 id，更新操作必须传入 id。"),a("br"),s._v("\n上面说的问题都是最基础的，那如何实现呢？")]),s._v(" "),a("ol",[a("li",[s._v("创建分组标识。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public interface AddGroup {}\npublic interface UpdateGroup {}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("在接收参数的 DTO 上标识，给校验注解标注什么情况需要进行校验。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@NotNull(message = "id不能为空", groups = {UpdateGroup.class})\n@Null(message = "id必须为空", groups = {AddGroup.class})\nprivate Long id;\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("在 Controller 的方法上，使用 @Validated 指定分组标识。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@PostMapping("/test3")\npublic R test3(@Validated(AddGroup.class) @RequestBody TestDTO3 dto) {\n    log.info("[TestDTO3 <{}>]", dto);\n    return R.ok();\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("注意点：")]),s._v(" 默认没有指定分组的校验注解，在分组校验情况下不生效。"),a("br"),s._v("\n（例：我们有个参数的校验规则没有分组， @NotBlank 没有进行分组，它无论在 AddGroup 或 UpdateGroup 下都是不生效的）")]),s._v(" "),a("h2",{attrs:{id:"顺序校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序校验"}},[s._v("#")]),s._v(" 顺序校验")]),s._v(" "),a("p",[s._v("在一些场景下，参数校验是需要有顺序的。"),a("br"),s._v("\nJSR-303 校验中专门提供了 @GroupSequence 来实现。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("@GroupSequence(value = {ValidateSequence.Validate1.class,\n        ValidateSequence.Validate2.class,\n        ValidateSequence.Validate3.class,\n        ValidateSequence.Validate4.class,\n        ValidateSequence.Default.class,})\npublic interface ValidateSequence {\n    interface Validate1{}\n    interface Validate2{}\n    interface Validate3{}\n    interface Validate4{}\n    interface Default{}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Data\npublic class TestDTO4 {\n    @NotNull(message = "id不能为空", groups = {ValidateSequence.Validate1.class})\n    private Long id;\n    @NotBlank(message = "name不能为空", groups = {  ValidateSequence.Validate2.class})\n    private String name;\n    @NotNull(message = "age不能为空", groups = {  ValidateSequence.Validate2.class})\n    private Integer age;\n    @NotNull(message = "status不能为空")\n    private Integer status;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@PostMapping("/test5")\npublic R test5(@Validated(ValidateSequence.class) @RequestBody TestDTO4 dto) {\n    log.info("[TestDTO4 <{}>]", dto);\n    return R.ok();\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"自定义校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义校验"}},[s._v("#")]),s._v(" 自定义校验")]),s._v(" "),a("p",[s._v("有些时候，我们需要的一些校验规则，库中没有提供，这时候我们就需要自定义了。")]),s._v(" "),a("p",[s._v("一些简单的，可以通过"),a("strong",[s._v("正则表达式匹配")]),s._v("可以实现。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Data\npublic class TestDTO5 {\n    @NotNull(message = "id不能为空")\n    private Long id;\n    @NotBlank(message = "name不能为空")\n    @Pattern(regexp = "^[A-Za-z][A-Za-z0-9]{5,17}$", message = "用户名由字母开头的6-18位数字和字母组成")\n    private String name;\n    @NotBlank(message = "phone不能为空")\n    @Pattern(regexp = "^1[3|4|5|6|8|7|9]\\\\d{9}$", message = "手机号格式不正确")\n    private String phone;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("但是有一些，正则表达式无法判断。"),a("br"),s._v("\n例：传入的是一个 List，但我们要限制传入的值，只能是固定的一些数。"),a("br"),s._v("\n1.编写一个自定义的校验注解；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@Documented\n// 可以指定多个不同的校验器\n@Constraint(validatedBy = {ListInValuesValiadator.class})\n@Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE})\n@Retention(RUNTIME)\npublic @interface ListInValues {\n    // 默认提示值可自定义，词条文件：ValidationMessages.properties\n    String message() default "{javax.validation.constraints.NotBlank.message}";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n    int[] values() default {};\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("2.编写一个自定义的校验器；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class ListInValuesValiadator implements ConstraintValidator<ListInValues, Integer> {\n    private Set<Integer> values = new HashSet<>();\n    @Override\n    public void initialize(ListInValues constraintAnnotation) {\n        // 初始化\n        int[] vals = constraintAnnotation.values();\n        for (int val : vals) {\n            values.add(val);\n        }\n    }\n    @Override\n    public boolean isValid(Integer value, ConstraintValidatorContext context) {\n        // 校验\n        return values.contains(value);\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("3.关联自定义的校验器和自定义的校验注解，@Constraint(validatedBy = {ListInValuesValiadator.class})；"),a("br"),s._v("\n4.使用；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@NotNull\n@ListInValues(values = {0,1}, message = "错误值")\nprivate Integer status;\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2020/11/%E6%A0%A1%E9%AA%8C%E4%B8%8D%E9%80%9A%E8%BF%87%E8%BF%94%E5%9B%9E_1605779244452.png?x-oss-process=style/yuantu_shuiyin",alt:"校验不通过返回"}})]),s._v(" "),a("h2",{attrs:{id:"源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[s._v("#")]),s._v(" 源码")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/rcbb-cc/fast-start-guide",target:"_blank",rel:"noopener noreferrer"}},[s._v("Validator-demo Github地址"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("更多好文，请关注"),a("a",{attrs:{href:"https://rcbb.cc",target:"_blank",rel:"noopener noreferrer"}},[s._v("我的博客"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=t.exports}}]);