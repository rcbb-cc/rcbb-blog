(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{373:function(e,n,s){"use strict";s.r(n);var a=s(1),r=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),n("p",[e._v("项目中日志系统是必不可少的，目前比较流行的日志框架有 log4j、logback 等，可能大家还不知道，这两个框架的作者是同一个人，Logback 旨在作为流行的 log4j 项目的后续版本，从而恢复 log4j 离开的位置。")]),e._v(" "),n("p",[e._v("另外 slf4j(Simple Logging Facade for Java) 则是一个日志门面框架，提供了日志系统中常用的接口，logback 和 log4j 则对slf4j 进行了实现。")]),e._v(" "),n("p",[e._v("我们本文将讲述如何在 SpringBoot 中应用 logback+slf4j 实现日志的记录。")]),e._v(" "),n("h2",{attrs:{id:"为什么使用logback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用logback"}},[e._v("#")]),e._v(" 为什么使用logback")]),e._v(" "),n("ul",[n("li",[e._v("Logback 是log4j 框架的作者开发的新一代日志框架，它效率更高、能够适应诸多的运行环境，同时天然支持 SLF4J。")]),e._v(" "),n("li",[e._v("Logback 的定制性更加灵活，同时也是 SpringBoot 的内置日志框架。")])]),e._v(" "),n("h2",{attrs:{id:"开始使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开始使用"}},[e._v("#")]),e._v(" 开始使用")]),e._v(" "),n("h2",{attrs:{id:"一、添加依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、添加依赖"}},[e._v("#")]),e._v(" 一、添加依赖")]),e._v(" "),n("p",[e._v("实际开发中我们直接引入"),n("code",[e._v("spring-boot-starter-web")]),e._v("依赖即可，因为"),n("code",[e._v("spring-boot-starter-web")]),e._v("包含了"),n("code",[e._v("spring-boot-starter")]),e._v("。"),n("br"),e._v("\n而"),n("code",[e._v("spring-boot-starter")]),e._v("包含了"),n("code",[e._v("spring-boot-starter-logging")]),e._v("，所以我们只需要引入 web 组件即可。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("h2",{attrs:{id:"二、默认配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、默认配置"}},[e._v("#")]),e._v(" 二、默认配置")]),e._v(" "),n("p",[e._v("默认情况下 SpringBoot 将日志输出到控制台，不会写到日志文件。")]),e._v(" "),n("p",[e._v("如果要编写除控制台输出之外的日志文件，则需在 application.properties 中设置 logging.file 或 logging.path 属性。"),n("br"),e._v("\n注：二者不能同时使用，如若同时使用，则只有 logging.file 生效。")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("logging.file=文件名（设置文件，可以是绝对路径，也可以是相对路径。例：logging.file=my.log）")])]),e._v(" "),n("li",[n("p",[e._v("logging.path=日志文件路径（设置目录，会在该目录下创建spring.log文件，并写入日志内容。例：logging.path=/var/log）")])]),e._v(" "),n("li",[n("p",[e._v("logging.level.包名=指定包下的日志级别")])]),e._v(" "),n("li",[n("p",[e._v("logging.pattern.console=日志打印规则")])])]),e._v(" "),n("p",[e._v("可以看到这种方式配置简单，但是能实现的功能也非常有限，如果想要更复杂的需求，就需要下面的定制化配置了。")]),e._v(" "),n("h2",{attrs:{id:"三、logback-spring-xml详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、logback-spring-xml详解"}},[e._v("#")]),e._v(" 三、logback-spring.xml详解")]),e._v(" "),n("p",[e._v("SpringBoot 官方推荐优先使用带有"),n("code",[e._v("-spring")]),e._v("的文件名作为你的日志配置（如使用"),n("code",[e._v("logback-spring.xml")]),e._v("，而不是"),n("code",[e._v("logback.xml")]),e._v("），命名为"),n("code",[e._v("logback-spring.xml")]),e._v("的日志配置文件，将 xml 放至"),n("code",[e._v("src/main/resource")]),e._v("下面。")]),e._v(" "),n("p",[e._v("也可以使用自定义的名称，比如"),n("code",[e._v("logback-config.xml")]),e._v("，只需要在 application.properties 文件中使用"),n("code",[e._v("logging.config=classpath:logback-config.xml")]),e._v("指定即可。")]),e._v(" "),n("p",[e._v("在讲解 logback-spring.xml之前我们先来了解三个单词：")]),e._v(" "),n("ul",[n("li",[e._v("Logger（记录器）")]),e._v(" "),n("li",[e._v("Appenders（附加器）")]),e._v(" "),n("li",[e._v("Layouts（布局）")])]),e._v(" "),n("p",[e._v("Logback 基于三个主要类：Logger，Appender和Layout。")]),e._v(" "),n("p",[e._v("这三种类型的组件协同工作，使开发人员能够根据消息类型和级别记录消息，并在运行时控制这些消息的格式以及报告的位置。")]),e._v(" "),n("p",[e._v("首先给出一个基本的 xml 配置如下：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<configuration>\n \n  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\n    \x3c!-- encoders are assigned the type\n         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default --\x3e\n    <encoder>\n      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n    </encoder>\n  </appender>\n \n  <logger name="chapters.configuration" level="INFO"/>\n \n  \x3c!-- Strictly speaking, the level attribute is not necessary since --\x3e\n  \x3c!-- the level of the root level is set to DEBUG by default.       --\x3e\n  <root level="DEBUG">          \n    <appender-ref ref="STDOUT" />\n  </root>  \n  \n</configuration>\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br")])]),n("h3",{attrs:{id:"_3-1、-configuration-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、-configuration-元素"}},[e._v("#")]),e._v(" 3.1、"),n("code",[e._v("<configuration>")]),e._v("元素")]),e._v(" "),n("p",[e._v("logback.xml 配置文件的基本结构可以描述为"),n("code",[e._v("<configuration>")]),e._v("元素，包含零个或多个"),n("code",[e._v("<appender>")]),e._v("元素，后跟零个或多个"),n("code",[e._v("<logger>")]),e._v("元素，后跟最多一个"),n("code",[e._v("<root>")]),e._v("元素(也可以没有)。")]),e._v(" "),n("p",[e._v("下图说明了这种基本结构：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816135959-14ab0e.png?x-oss-process=style/yuantu_shuiyin",alt:"configuration元素"}})]),e._v(" "),n("h3",{attrs:{id:"_3-2、-logger-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、-logger-元素"}},[e._v("#")]),e._v(" 3.2、"),n("code",[e._v("<logger>")]),e._v("元素")]),e._v(" "),n("p",[n("code",[e._v("<logger>")]),e._v("元素只接受一个必需的 name 属性，一个可选的 level 属性和一个可选的 additivity 属性，允许值为 true 或 false 。")]),e._v(" "),n("p",[e._v("level 属性的值允许一个不区分大小写的字符串值 TRACE，DEBUG，INFO，WARN，ERROR，ALL 或 OFF。")]),e._v(" "),n("p",[n("code",[e._v("<logger>")]),e._v("元素可以包含零个或多个"),n("code",[e._v("<appender-ref>")]),e._v("元素。")]),e._v(" "),n("p",[e._v("这样引用的每个 appender 都被添加到指定的 logger 中，logger 元素级别具有继承性。")]),e._v(" "),n("p",[e._v("例1：仅为根记录器分配了级别。此级别值 DEBUG 由其他记录器 X，X.Y和X.Y.Z 继承。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816140326-69a802.png?x-oss-process=style/yuantu_shuiyin",alt:"继承性-例1"}})]),e._v(" "),n("p",[e._v("例2：所有记录器都有一个指定的级别值。级别继承不起作用。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816140424-2d88f7.png?x-oss-process=style/yuantu_shuiyin",alt:"继承性-例2"}})]),e._v(" "),n("p",[e._v("例3：记录器 root，X 和 X.Y.Z 分别被分配了 DEBUG，INFO 和 ERROR 级别。Logger X.Y 从其父 X 继承其级别值。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816140547-5d34fc.png?x-oss-process=style/yuantu_shuiyin",alt:"继承性-例3"}})]),e._v(" "),n("p",[e._v("例4：记录器 root 和 X 分别被分配了 DEBUG 和 INFO 级别。记录器 X.Y 和 X.Y.Z 从其最近的父 X 继承其级别值，该父级具有指定的级别。")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816140710-ad2eee.png?x-oss-process=style/yuantu_shuiyin",alt:"继承性-例4"}})]),e._v(" "),n("h3",{attrs:{id:"_3-3、-root-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、-root-元素"}},[e._v("#")]),e._v(" 3.3、"),n("code",[e._v("<root>")]),e._v("元素")]),e._v(" "),n("p",[n("code",[e._v("<root>")]),e._v("元素配置根记录器。"),n("br"),e._v("\n它支持单个属性，即 level 属性。"),n("br"),e._v("\n它不允许任何其他属性，因为 additivity 标志不适用于根记录器。"),n("br"),e._v("\n此外，由于根记录器已被命名为 ROOT ，因此它也不允许使用 name 属性。")]),e._v(" "),n("p",[e._v("level 属性的值可以是不区分大小写的字符串 TRACE，DEBUG，INFO，WARN，ERROR，ALL 或 OFF 之一。")]),e._v(" "),n("p",[n("code",[e._v("<root>")]),e._v("元素可以包含零个或多个"),n("code",[e._v("<appender-ref>")]),e._v("元素。")]),e._v(" "),n("p",[e._v("这样引用的每个 appender 都被添加到根记录器中。")]),e._v(" "),n("h3",{attrs:{id:"_3-4、-appender-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、-appender-元素"}},[e._v("#")]),e._v(" 3.4、"),n("code",[e._v("<appender>")]),e._v("元素")]),e._v(" "),n("p",[e._v("appender 使用"),n("code",[e._v("<appender>")]),e._v("元素配置，该元素采用两个必需属性 name 和 class。"),n("br"),e._v("\nname 属性指定 appender 的名称，而 class 属性指定要实例化的 appender 类的完全限定名称。")]),e._v(" "),n("p",[n("code",[e._v("<appender>")]),e._v("元素可以包含零个或一个"),n("code",[e._v("<layout>")]),e._v("元素，零个或多个"),n("code",[e._v("<encoder>")]),e._v("元素以及零个或多个"),n("code",[e._v("<filter>")]),e._v("元素。")]),e._v(" "),n("p",[e._v("下图说明了常见的结构：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816141417-ab1605.png?x-oss-process=style/yuantu_shuiyin",alt:"appender元素"}})]),e._v(" "),n("p",[e._v("重要：在 logback 中，输出目标称为 appender，addAppender 方法将 appender 添加到给定的记录器 logger。"),n("br"),e._v("\n给定记录器的每个启用的日志记录请求都将转发到该记录器中的所有 appender 以及层次结构中较高的 appender。\n换句话说，appender 是从记录器层次结构中附加地继承的。")]),e._v(" "),n("p",[e._v("例如，如果将控制台 appender 添加到根记录器，则所有启用的日志记录请求将至少在控制台上打印。")]),e._v(" "),n("p",[e._v("如果另外将文件追加器添加到记录器（例如L），则对 L 和 L 的子项启用的记录请求将打印在文件和控制台上。"),n("br"),e._v("\n通过将记录器的 additivity 标志设置为 false，可以覆盖此默认行为，以便不再添加 appender 累积。")]),e._v(" "),n("p",[e._v("Appender 是一个接口，它有许多子接口和实现类，具体如下图所示：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816143228-2ae38d.png?x-oss-process=style/yuantu_shuiyin",alt:"Appender"}})]),e._v(" "),n("p",[e._v("其中最重要的两个Appender为：ConsoleAppender 、RollingFileAppender。")]),e._v(" "),n("h4",{attrs:{id:"_3-4-1、consoleappender"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1、consoleappender"}},[e._v("#")]),e._v(" 3.4.1、ConsoleAppender")]),e._v(" "),n("p",[e._v("ConsoleAppender，如名称所示，将日志输出到控制台上。")]),e._v(" "),n("h4",{attrs:{id:"_3-4-2、rollingfileappender"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2、rollingfileappender"}},[e._v("#")]),e._v(" 3.4.2、RollingFileAppender")]),e._v(" "),n("p",[e._v("RollingFileAppender，是 FileAppender 的一个子类，扩展了 FileAppender，具有翻转日志文件的功能。")]),e._v(" "),n("p",[e._v("例如，RollingFileAppender 可以记录到名为 log.txt 文件的文件，并且一旦满足某个条件，就将其日志记录目标更改为另一个文件。")]),e._v(" "),n("p",[e._v("有两个与 RollingFileAppender 交互的重要子组件。")]),e._v(" "),n("ul",[n("li",[e._v("RollingPolicy：负责执行翻转所需的操作。")]),e._v(" "),n("li",[e._v("TriggeringPolicy：将确定是否以及何时发生翻转。")])]),e._v(" "),n("p",[e._v("因此，RollingPolicy 负责什么和 TriggeringPolicy 负责什么时候。")]),e._v(" "),n("p",[e._v("作为任何用途，RollingFileAppender 必须同时设置 RollingPolicy 和 TriggeringPolicy。"),n("br"),e._v("\n但是，如果其 RollingPolicy 也实现了TriggeringPolicy 接口，则只需要显式指定前者。")]),e._v(" "),n("h4",{attrs:{id:"_3-4-3、滚动策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3、滚动策略"}},[e._v("#")]),e._v(" 3.4.3、滚动策略")]),e._v(" "),n("p",[e._v("TimeBasedRollingPolicy：可能是最受欢迎的滚动策略。它根据时间定义翻转策略，例如按天或按月。"),n("br"),e._v("\nTimeBasedRollingPolicy 承担滚动和触发所述翻转的责任。实际上，TimeBasedTriggeringPolicy 实现了 RollingPolicy 和 TriggeringPolicy 接口。")]),e._v(" "),n("p",[e._v("SizeAndTimeBasedRollingPolicy：有时您可能希望按日期归档文件，但同时限制每个日志文件的大小，特别是如果后处理工具对日志文件施加大小限制。"),n("br"),e._v("\n为了满足此要求，logback 提供了 SizeAndTimeBasedRollingPolicy ，它是 TimeBasedRollingPolicy 的一个子类，实现了基于时间和日志文件大小的翻滚策略。")]),e._v(" "),n("h3",{attrs:{id:"_3-5、-encoder-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5、-encoder-元素"}},[e._v("#")]),e._v(" 3.5、"),n("code",[e._v("<encoder>")]),e._v("元素")]),e._v(" "),n("p",[e._v("encoder 中最重要就是 pattern 属性，它负责控制输出日志的格式，这里给出一个我自己写的示例：")]),e._v(" "),n("blockquote",[n("p",[n("pattern",[e._v("%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) --- [%15.15(%thread)] %cyan(%-40.40(%logger{40})) : %msg%n")])])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/08/20220816143827-d6b5b2.png?x-oss-process=style/yuantu_shuiyin",alt:"输出格式"}})]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("%d{yyyy-MM-dd HH:mm:ss.SSS}：日期\n%-5level：日志级别\n%highlight()：颜色，info为蓝色，warn为浅红，error为加粗红，debug为黑色\n%thread：打印日志的线程\n%15.15():如果记录的线程字符长度小于15(第一个)则用空格在左侧补齐,如果字符长度大于15(第二个),则从开头开始截断多余的字符 \n%logger：日志输出的类名\n%-40.40()：如果记录的logger字符长度小于40(第一个)则用空格在右侧补齐,如果字符长度大于40(第二个),则从开头开始截断多余的字符\n%cyan：颜色\n%msg：日志输出内容\n%n：换行符\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])]),n("h3",{attrs:{id:"_3-6、-filter-元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6、-filter-元素"}},[e._v("#")]),e._v(" 3.6、"),n("code",[e._v("<filter>")]),e._v("元素")]),e._v(" "),n("p",[e._v("filter 中最重要的两个过滤器为：LevelFilter、ThresholdFilter。")]),e._v(" "),n("p",[e._v("LevelFilter 根据精确的级别匹配过滤事件。"),n("br"),e._v("\n如果事件的级别等于配置的级别，则筛选器接受或拒绝该事件，具体取决于 onMatch 和 onMismatch 属性的配置。")]),e._v(" "),n("p",[e._v("例如下面配置将只打印 INFO 级别的日志，其余的全部禁止打印输出：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<configuration>\n  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">\n    <filter class="ch.qos.logback.classic.filter.LevelFilter">\n      <level>INFO</level>\n      <onMatch>ACCEPT</onMatch>\n      <onMismatch>DENY</onMismatch>\n    </filter>\n    <encoder>\n      <pattern>\n        %-4relative [%thread] %-5level %logger{30} - %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n  <root level="DEBUG">\n    <appender-ref ref="CONSOLE" />\n  </root>\n</configuration>\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br")])]),n("p",[e._v("ThresholdFilter 过滤低于指定阈值的事件。"),n("br"),e._v("\n对于等于或高于阈值的事件，ThresholdFilter 将在调用其 decision方法时响应 NEUTRAL。")]),e._v(" "),n("p",[e._v("但是，将拒绝级别低于阈值的事件，例如下面的配置将拒绝所有低于 INFO 级别的日志，只输出 INFO 以及以上级别的日志：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<configuration>\n  <appender name="CONSOLE"\n    class="ch.qos.logback.core.ConsoleAppender">\n    \x3c!-- deny all events with a level below INFO, that is TRACE and DEBUG --\x3e\n    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">\n      <level>INFO</level>\n    </filter>\n    <encoder>\n      <pattern>\n        %-4relative [%thread] %-5level %logger{30} - %msg%n\n      </pattern>\n    </encoder>\n  </appender>\n  <root level="DEBUG">\n    <appender-ref ref="CONSOLE" />\n  </root>\n</configuration>\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br")])]),n("h2",{attrs:{id:"四、详细的logback-spring-xml示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、详细的logback-spring-xml示例"}},[e._v("#")]),e._v(" 四、详细的logback-spring.xml示例")]),e._v(" "),n("p",[e._v("以上介绍了 xml 中重要的几个元素，下面将我配置的 xml 贴出来以供参考（实现了基于日期和大小翻滚的策略，以及经 INFO 和 ERROR 日志区分输出，还有规范日志输出格式等）")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<configuration debug="true">\n \n    \x3c!-- appender是configuration的子节点，是负责写日志的组件。 --\x3e\n    \x3c!-- ConsoleAppender：把日志输出到控制台 --\x3e\n    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\n        \x3c!-- 默认情况下，每个日志事件都会立即刷新到基础输出流。 这种默认方法更安全，因为如果应用程序在没有正确关闭appender的情况下退出，则日志事件不会丢失。\n         但是，为了显着增加日志记录吞吐量，您可能希望将immediateFlush属性设置为false --\x3e\n        \x3c!--<immediateFlush>true</immediateFlush>--\x3e\n        <encoder>\n            \x3c!-- %37():如果字符没有37个字符长度,则左侧用空格补齐 --\x3e\n            \x3c!-- %-37():如果字符没有37个字符长度,则右侧用空格补齐 --\x3e\n            \x3c!-- %15.15():如果记录的线程字符长度小于15(第一个)则用空格在左侧补齐,如果字符长度大于15(第二个),则从开头开始截断多余的字符 --\x3e\n            \x3c!-- %-40.40():如果记录的logger字符长度小于40(第一个)则用空格在右侧补齐,如果字符长度大于40(第二个),则从开头开始截断多余的字符 --\x3e\n            \x3c!-- %msg：日志打印详情 --\x3e\n            \x3c!-- %n:换行符 --\x3e\n            \x3c!-- %highlight():转换说明符以粗体红色显示其级别为ERROR的事件，红色为WARN，BLUE为INFO，以及其他级别的默认颜色。 --\x3e\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) --- [%15.15(%thread)] %cyan(%-40.40(%logger{40})) : %msg%n</pattern>\n            \x3c!-- 控制台也要使用UTF-8，不要使用GBK，否则会中文乱码 --\x3e\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n \n    \x3c!-- info 日志--\x3e\n    \x3c!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --\x3e\n    \x3c!-- 以下的大概意思是：1.先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是project_info.log --\x3e\n    \x3c!--             2.如果日期没有发生变化，但是当前日志的文件大小超过10MB时，对当前日志进行分割 重命名--\x3e\n    <appender name="info_log" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!--日志文件路径和名称--\x3e\n        <File>logs/project_info.log</File>\n        \x3c!--是否追加到文件末尾,默认为true--\x3e\n        <append>true</append>\n        <filter class="ch.qos.logback.classic.filter.LevelFilter">\n            <level>ERROR</level>\n            <onMatch>DENY</onMatch>\x3c!-- 如果命中ERROR就禁止这条日志 --\x3e\n            <onMismatch>ACCEPT</onMismatch>\x3c!-- 如果没有命中就使用这条规则 --\x3e\n        </filter>\n        \x3c!--有两个与RollingFileAppender交互的重要子组件。 第一个RollingFileAppender子组件，即RollingPolicy:负责执行翻转所需的操作。\n         RollingFileAppender的第二个子组件，即TriggeringPolicy:将确定是否以及何时发生翻转。 因此，RollingPolicy负责什么和TriggeringPolicy负责什么时候.\n        作为任何用途，RollingFileAppender必须同时设置RollingPolicy和TriggeringPolicy,但是，如果其RollingPolicy也实现了TriggeringPolicy接口，则只需要显式指定前者。--\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">\n            \x3c!-- 日志文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 --\x3e\n            \x3c!-- 文件名：logs/project_info.2017-12-05.0.log --\x3e\n            \x3c!-- 注意：SizeAndTimeBasedRollingPolicy中 ％i和％d令牌都是强制性的，必须存在，要不会报错 --\x3e\n            <fileNamePattern>logs/project_info.%d.%i.log</fileNamePattern>\n            \x3c!-- 每产生一个日志文件，该日志文件的保存期限为30天, ps:maxHistory的单位是根据fileNamePattern中的翻转策略自动推算出来的,例如上面选用了yyyy-MM-dd,则单位为天\n            如果上面选用了yyyy-MM,则单位为月,另外上面的单位默认为yyyy-MM-dd--\x3e\n            <maxHistory>30</maxHistory>\n            \x3c!-- 每个日志文件到10mb的时候开始切分，最多保留30天，但最大到20GB，哪怕没到30天也要删除多余的日志 --\x3e\n            <totalSizeCap>20GB</totalSizeCap>\n            \x3c!-- maxFileSize:这是活动文件的大小，默认值是10MB，测试时可改成5KB看效果 --\x3e\n            <maxFileSize>10MB</maxFileSize>\n        </rollingPolicy>\n        \x3c!--编码器--\x3e\n        <encoder>\n            \x3c!-- pattern节点，用来设置日志的输入格式 ps:日志文件中没有设置颜色,否则颜色部分会有ESC[0:39em等乱码--\x3e\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level --- [%15.15(%thread)] %-40.40(%logger{40}) : %msg%n</pattern>\n            \x3c!-- 记录日志的编码:此处设置字符集 - --\x3e\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n \n    \x3c!-- error 日志--\x3e\n    \x3c!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --\x3e\n    \x3c!-- 以下的大概意思是：1.先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是project_error.log --\x3e\n    \x3c!--             2.如果日期没有发生变化，但是当前日志的文件大小超过10MB时，对当前日志进行分割 重命名--\x3e\n    <appender name="error_log" class="ch.qos.logback.core.rolling.RollingFileAppender">\n        \x3c!--日志文件路径和名称--\x3e\n        <File>logs/project_error.log</File>\n        \x3c!--是否追加到文件末尾,默认为true--\x3e\n        <append>true</append>\n        \x3c!-- ThresholdFilter过滤低于指定阈值的事件。 对于等于或高于阈值的事件，ThresholdFilter将在调用其decision（）方法时响应NEUTRAL。 但是，将拒绝级别低于阈值的事件 --\x3e\n        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">\n            <level>ERROR</level>\x3c!-- 低于ERROR级别的日志（debug,info）将被拒绝，等于或者高于ERROR的级别将相应NEUTRAL --\x3e\n        </filter>\n        \x3c!--有两个与RollingFileAppender交互的重要子组件。 第一个RollingFileAppender子组件，即RollingPolicy:负责执行翻转所需的操作。\n        RollingFileAppender的第二个子组件，即TriggeringPolicy:将确定是否以及何时发生翻转。 因此，RollingPolicy负责什么和TriggeringPolicy负责什么时候.\n       作为任何用途，RollingFileAppender必须同时设置RollingPolicy和TriggeringPolicy,但是，如果其RollingPolicy也实现了TriggeringPolicy接口，则只需要显式指定前者。--\x3e\n        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">\n            \x3c!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 --\x3e\n            \x3c!-- 文件名：logs/project_error.2017-12-05.0.log --\x3e\n            \x3c!-- 注意：SizeAndTimeBasedRollingPolicy中 ％i和％d令牌都是强制性的，必须存在，要不会报错 --\x3e\n            <fileNamePattern>logs/project_error.%d.%i.log</fileNamePattern>\n            \x3c!-- 每产生一个日志文件，该日志文件的保存期限为30天, ps:maxHistory的单位是根据fileNamePattern中的翻转策略自动推算出来的,例如上面选用了yyyy-MM-dd,则单位为天\n            如果上面选用了yyyy-MM,则单位为月,另外上面的单位默认为yyyy-MM-dd--\x3e\n            <maxHistory>30</maxHistory>\n            \x3c!-- 每个日志文件到10mb的时候开始切分，最多保留30天，但最大到20GB，哪怕没到30天也要删除多余的日志 --\x3e\n            <totalSizeCap>20GB</totalSizeCap>\n            \x3c!-- maxFileSize:这是活动文件的大小，默认值是10MB，测试时可改成5KB看效果 --\x3e\n            <maxFileSize>10MB</maxFileSize>\n        </rollingPolicy>\n        \x3c!--编码器--\x3e\n        <encoder>\n            \x3c!-- pattern节点，用来设置日志的输入格式 ps:日志文件中没有设置颜色,否则颜色部分会有ESC[0:39em等乱码--\x3e\n            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level --- [%15.15(%thread)] %-40.40(%logger{40}) : %msg%n</pattern>\n            \x3c!-- 记录日志的编码:此处设置字符集 - --\x3e\n            <charset>UTF-8</charset>\n        </encoder>\n    </appender>\n \n    \x3c!--给定记录器的每个启用的日志记录请求都将转发到该记录器中的所有appender以及层次结构中较高的appender（不用在意level值）。\n    换句话说，appender是从记录器层次结构中附加地继承的。\n    例如，如果将控制台appender添加到根记录器，则所有启用的日志记录请求将至少在控制台上打印。\n    如果另外将文件追加器添加到记录器（例如L），则对L和L\'子项启用的记录请求将打印在文件和控制台上。\n    通过将记录器的additivity标志设置为false，可以覆盖此默认行为，以便不再添加appender累积--\x3e\n    \x3c!-- configuration中最多允许一个root，别的logger如果没有设置级别则从父级别root继承 --\x3e\n    <root level="INFO">\n        <appender-ref ref="STDOUT" />\n    </root>\n \n    \x3c!-- 指定项目中某个包，当有日志操作行为时的日志记录级别 --\x3e\n    \x3c!-- 级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE  --\x3e\n    <logger name="com.sailing.springbootmybatis" level="INFO">\n        <appender-ref ref="info_log" />\n        <appender-ref ref="error_log" />\n    </logger>\n \n    \x3c!-- 利用logback输入mybatis的sql日志，\n    注意：如果不加 additivity="false" 则此logger会将输出转发到自身以及祖先的logger中，就会出现日志文件中sql重复打印--\x3e\n    <logger name="com.sailing.springbootmybatis.mapper" level="DEBUG" additivity="false">\n        <appender-ref ref="info_log" />\n        <appender-ref ref="error_log" />\n    </logger>\n \n    \x3c!-- additivity=false代表禁止默认累计的行为，即com.atomikos中的日志只会记录到日志文件中，不会输出层次级别更高的任何appender--\x3e\n    <logger name="com.atomikos" level="INFO" additivity="false">\n        <appender-ref ref="info_log" />\n        <appender-ref ref="error_log" />\n    </logger>\n \n</configuration>\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br"),n("span",{staticClass:"line-number"},[e._v("41")]),n("br"),n("span",{staticClass:"line-number"},[e._v("42")]),n("br"),n("span",{staticClass:"line-number"},[e._v("43")]),n("br"),n("span",{staticClass:"line-number"},[e._v("44")]),n("br"),n("span",{staticClass:"line-number"},[e._v("45")]),n("br"),n("span",{staticClass:"line-number"},[e._v("46")]),n("br"),n("span",{staticClass:"line-number"},[e._v("47")]),n("br"),n("span",{staticClass:"line-number"},[e._v("48")]),n("br"),n("span",{staticClass:"line-number"},[e._v("49")]),n("br"),n("span",{staticClass:"line-number"},[e._v("50")]),n("br"),n("span",{staticClass:"line-number"},[e._v("51")]),n("br"),n("span",{staticClass:"line-number"},[e._v("52")]),n("br"),n("span",{staticClass:"line-number"},[e._v("53")]),n("br"),n("span",{staticClass:"line-number"},[e._v("54")]),n("br"),n("span",{staticClass:"line-number"},[e._v("55")]),n("br"),n("span",{staticClass:"line-number"},[e._v("56")]),n("br"),n("span",{staticClass:"line-number"},[e._v("57")]),n("br"),n("span",{staticClass:"line-number"},[e._v("58")]),n("br"),n("span",{staticClass:"line-number"},[e._v("59")]),n("br"),n("span",{staticClass:"line-number"},[e._v("60")]),n("br"),n("span",{staticClass:"line-number"},[e._v("61")]),n("br"),n("span",{staticClass:"line-number"},[e._v("62")]),n("br"),n("span",{staticClass:"line-number"},[e._v("63")]),n("br"),n("span",{staticClass:"line-number"},[e._v("64")]),n("br"),n("span",{staticClass:"line-number"},[e._v("65")]),n("br"),n("span",{staticClass:"line-number"},[e._v("66")]),n("br"),n("span",{staticClass:"line-number"},[e._v("67")]),n("br"),n("span",{staticClass:"line-number"},[e._v("68")]),n("br"),n("span",{staticClass:"line-number"},[e._v("69")]),n("br"),n("span",{staticClass:"line-number"},[e._v("70")]),n("br"),n("span",{staticClass:"line-number"},[e._v("71")]),n("br"),n("span",{staticClass:"line-number"},[e._v("72")]),n("br"),n("span",{staticClass:"line-number"},[e._v("73")]),n("br"),n("span",{staticClass:"line-number"},[e._v("74")]),n("br"),n("span",{staticClass:"line-number"},[e._v("75")]),n("br"),n("span",{staticClass:"line-number"},[e._v("76")]),n("br"),n("span",{staticClass:"line-number"},[e._v("77")]),n("br"),n("span",{staticClass:"line-number"},[e._v("78")]),n("br"),n("span",{staticClass:"line-number"},[e._v("79")]),n("br"),n("span",{staticClass:"line-number"},[e._v("80")]),n("br"),n("span",{staticClass:"line-number"},[e._v("81")]),n("br"),n("span",{staticClass:"line-number"},[e._v("82")]),n("br"),n("span",{staticClass:"line-number"},[e._v("83")]),n("br"),n("span",{staticClass:"line-number"},[e._v("84")]),n("br"),n("span",{staticClass:"line-number"},[e._v("85")]),n("br"),n("span",{staticClass:"line-number"},[e._v("86")]),n("br"),n("span",{staticClass:"line-number"},[e._v("87")]),n("br"),n("span",{staticClass:"line-number"},[e._v("88")]),n("br"),n("span",{staticClass:"line-number"},[e._v("89")]),n("br"),n("span",{staticClass:"line-number"},[e._v("90")]),n("br"),n("span",{staticClass:"line-number"},[e._v("91")]),n("br"),n("span",{staticClass:"line-number"},[e._v("92")]),n("br"),n("span",{staticClass:"line-number"},[e._v("93")]),n("br"),n("span",{staticClass:"line-number"},[e._v("94")]),n("br"),n("span",{staticClass:"line-number"},[e._v("95")]),n("br"),n("span",{staticClass:"line-number"},[e._v("96")]),n("br"),n("span",{staticClass:"line-number"},[e._v("97")]),n("br"),n("span",{staticClass:"line-number"},[e._v("98")]),n("br"),n("span",{staticClass:"line-number"},[e._v("99")]),n("br"),n("span",{staticClass:"line-number"},[e._v("100")]),n("br"),n("span",{staticClass:"line-number"},[e._v("101")]),n("br"),n("span",{staticClass:"line-number"},[e._v("102")]),n("br"),n("span",{staticClass:"line-number"},[e._v("103")]),n("br"),n("span",{staticClass:"line-number"},[e._v("104")]),n("br"),n("span",{staticClass:"line-number"},[e._v("105")]),n("br"),n("span",{staticClass:"line-number"},[e._v("106")]),n("br"),n("span",{staticClass:"line-number"},[e._v("107")]),n("br"),n("span",{staticClass:"line-number"},[e._v("108")]),n("br"),n("span",{staticClass:"line-number"},[e._v("109")]),n("br"),n("span",{staticClass:"line-number"},[e._v("110")]),n("br"),n("span",{staticClass:"line-number"},[e._v("111")]),n("br"),n("span",{staticClass:"line-number"},[e._v("112")]),n("br"),n("span",{staticClass:"line-number"},[e._v("113")]),n("br"),n("span",{staticClass:"line-number"},[e._v("114")]),n("br"),n("span",{staticClass:"line-number"},[e._v("115")]),n("br"),n("span",{staticClass:"line-number"},[e._v("116")]),n("br"),n("span",{staticClass:"line-number"},[e._v("117")]),n("br"),n("span",{staticClass:"line-number"},[e._v("118")]),n("br"),n("span",{staticClass:"line-number"},[e._v("119")]),n("br"),n("span",{staticClass:"line-number"},[e._v("120")]),n("br"),n("span",{staticClass:"line-number"},[e._v("121")]),n("br"),n("span",{staticClass:"line-number"},[e._v("122")]),n("br"),n("span",{staticClass:"line-number"},[e._v("123")]),n("br"),n("span",{staticClass:"line-number"},[e._v("124")]),n("br"),n("span",{staticClass:"line-number"},[e._v("125")]),n("br"),n("span",{staticClass:"line-number"},[e._v("126")]),n("br"),n("span",{staticClass:"line-number"},[e._v("127")]),n("br"),n("span",{staticClass:"line-number"},[e._v("128")]),n("br"),n("span",{staticClass:"line-number"},[e._v("129")]),n("br"),n("span",{staticClass:"line-number"},[e._v("130")]),n("br"),n("span",{staticClass:"line-number"},[e._v("131")]),n("br")])]),n("h2",{attrs:{id:"五、附加内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、附加内容"}},[e._v("#")]),e._v(" 五、附加内容")]),e._v(" "),n("p",[e._v("错误 log 输出方式：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('Object entry = new SomeObject(); \nlogger.debug("The entry is " + entry);\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("上面看起来没什么问题，但是会存在构造消息参数的成本，即将 entry 转换成字符串相加。")]),e._v(" "),n("p",[e._v("并且无论是否记录消息，都是如此，即：那怕日志级别为 INFO，也会执行括号里面的操作，但是日志不会输出。")]),e._v(" "),n("p",[e._v("优化后的写法：首先对设置的日志级别进行了判断，如果为debug模式，才进行参数的构造，对第一种写法进行了改善。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('if(logger.isDebugEnabled()) { \n    Object entry = new SomeObject(); \n    logger.debug("The entry is " + entry);\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("不过还有最好的写法，使用占位符：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('Object entry = new SomeObject(); \nlogger.debug("The entry is {}.", entry);\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("只有在评估是否记录之后，并且只有在决策是肯定的情况下，记录器实现才会格式化消息并将“{}”对替换为条目的字符串值。")]),e._v(" "),n("p",[e._v("换句话说，当禁用日志语句时，此表单不会产生参数构造的成本。")]),e._v(" "),n("p",[n("strong",[e._v("logback 作者进行测试得出：第一种和第三种写法将产生完全相同的输出。"),n("br"),e._v("\n但是，在禁用日志记录语句的情况下，第三个变体将比第一个变体优于至少30倍。")])]),e._v(" "),n("p",[e._v("如果有多个参数，写法如下：")]),e._v(" "),n("blockquote",[n("p",[e._v('logger.debug("The new entry is {}. It replaces {}.", entry, oldEntry);')])]),e._v(" "),n("p",[e._v("如果需要传递三个或更多参数，则还可以使用Object [] 变体：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('Object[] paramArray = {newVal, below, above};\nlogger.debug("Value {} was inserted between {} and {}.", paramArray); \n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("记录日志的时候我们可能需要在文件中记录下异常的堆栈信息，经过测试，logger.error(e) 不会打印出堆栈信息，正确的写法是：")]),e._v(" "),n("blockquote",[n("p",[e._v('logger.error("程序异常, 详细信息:{}", e.getLocalizedMessage() , e);')])]),e._v(" "),n("p",[e._v("原文地址：")]),e._v(" "),n("blockquote",[n("p",[e._v("white_ice - https://blog.csdn.net/white_ice/article/details/85065219")])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/rcbb-cc/fast-start-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("logback-demo Github地址"),n("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=r.exports}}]);