(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{356:function(t,s,a){"use strict";a.r(s);var e=a(1),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"外观模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外观模式"}},[t._v("#")]),t._v(" 外观模式")]),t._v(" "),s("p",[t._v("外观模式很好的体现了“最少知识原则”。")]),t._v(" "),s("p",[t._v("如果不使用外观模式，客户端通常需要和子系统内部的多个模块交互。\n使用外观模式过后，客户端只需要和外观类交互。")]),t._v(" "),s("h2",{attrs:{id:"外观模式-facade"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外观模式-facade"}},[t._v("#")]),t._v(" 外观模式(Facade)")]),t._v(" "),s("p",[t._v("场景问题：组装电脑，到电子市场，找一家专业装机的公司，把具体要求一讲，然后就等着拿电脑就好了。")]),t._v(" "),s("p",[t._v("模式定义：为子系统中的一组接口提供一个一致的界面，Facade 模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。")]),t._v(" "),s("p",[t._v("模式本质：封装交互，简化调用，减少与子系统内多个模块的交互，松散耦合。")]),t._v(" "),s("p",[t._v("使用场景：")]),t._v(" "),s("ul",[s("li",[t._v("如果你希望一个复杂的子系统提供一个简单接口的时候")]),t._v(" "),s("li",[t._v("如果想让客户程序与抽象类的实现部分松散耦合")]),t._v(" "),s("li",[t._v("如果构建多层结构的系统")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/09/20220906164925-714478.png?x-oss-process=style/yuantu_shuiyin",alt:"外观模式"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/f71051475e32",target:"_blank",rel:"noopener noreferrer"}},[t._v("七寸知架构-【结构型模式七】外观模式(Facade)"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://rcbb-blog.oss-cn-guangzhou.aliyuncs.com/2022/09/20220906171448-4d7848.png?x-oss-process=style/yuantu_shuiyin",alt:"外观模式-example1"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);